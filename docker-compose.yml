
# Railway-compatible docker-compose for individual service deployment
# For local development with all services, use docker-compose.local.yml

services:
  # Backend API (Railway compatible - no dependencies on local services)
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - "${PORT:-3001}:${PORT:-3001}"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3001}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      JWT_SECRET: ${JWT_SECRET}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      SOLANA_NETWORK: ${SOLANA_NETWORK:-devnet}
      SOLANA_RPC_URL: ${SOLANA_RPC_URL}
      CORS_ORIGIN: ${CORS_ORIGIN}
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-3001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App (Railway compatible)
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_SOLANA_NETWORK: ${VITE_SOLANA_NETWORK:-devnet}
        VITE_SOLANA_RPC_URL: ${VITE_SOLANA_RPC_URL}
    ports:
      - "${PORT:-3000}:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3